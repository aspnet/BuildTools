# Description: Runs build.cmd/sh on macOS, Linux, and Windows
# Parameters:
#   buildArgs: string
#       Additional arguments to pass to the build.sh/cmd script.
#       Note: -ci is always passed
#   beforeBuild: [steps]
#       Additional steps to run before build.sh/cmd
#   afterBuild: [steps]
#       Additional steps to run after build.sh/cmd
#   variables: {}
#       Azure DevOps build and environment variables
#   matrix: {}
#       The matrix of configurations to run. By default, it runs a Debug and Release build on all platforms
#   codeSign: boolean
#       This build definition is enabled for code signing. (Only applies to Windows)
#   runCodeQL3000: boolean
#       This build should run CodeQL3000 instead of the regular build

parameters:
  buildArgs: ''
  beforeBuild: []
  afterBuild: []
  codeSign: false
  variables: {}
  runCodeQL3000: false

jobs:
- ${{ if and(ne(variables['System.TeamProject'], 'public'), eq(parameters.runCodeQL3000, 'true')) }}:
  - template: default-build.yml
    parameters:
      agentOs: Windows
      matrix: ${{ parameters.matrix }}
      buildArgs: ${{ parameters.buildArgs }}
      beforeBuild:
      - task: CodeQL3000Init@0
        displayName: CodeQL Initialize
      - script: "echo ##vso[build.addbuildtag]CodeQL3000"
        displayName: 'Set CI CodeQL3000 tag'
        condition: ne(variables.CODEQL_DIST,'')
      afterBuild:
      - task: CodeQL3000Finalize@0
        displayName: CodeQL Finalize
      codeSign: false
      variables: ${{ parameters.variables }}
      runCodeQL3000: true
- ${{ else }}: # regular build
  - template: default-build.yml
    parameters:
      agentOs: Windows
      matrix: ${{ parameters.matrix }}
      buildArgs: ${{ parameters.buildArgs }}
      beforeBuild: ${{ parameters.beforeBuild }}
      afterBuild: ${{ parameters.afterBuild }}
      codeSign: ${{ parameters.codeSign }}
      variables: ${{ parameters.variables }}
  - template: default-build.yml
    parameters:
      agentOs: macOS
      matrix: ${{ parameters.matrix }}
      buildArgs: ${{ parameters.buildArgs }}
      beforeBuild: ${{ parameters.beforeBuild }}
      afterBuild: ${{ parameters.afterBuild }}
      variables: ${{ parameters.variables }}
  - template: default-build.yml
    parameters:
      agentOs: Linux
      matrix: ${{ parameters.matrix }}
      buildArgs: ${{ parameters.buildArgs }}
      beforeBuild: ${{ parameters.beforeBuild }}
      afterBuild: ${{ parameters.afterBuild }}
      variables: ${{ parameters.variables }}
