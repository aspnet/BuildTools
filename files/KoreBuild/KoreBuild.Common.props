<Project>

<!--
###################################################################
Standard lifecycle chain.
###################################################################
-->
  <PropertyGroup>
    <PrepareDependsOn></PrepareDependsOn>
    <RestoreDependsOn>Prepare</RestoreDependsOn>
    <CompileDependsOn>Restore</CompileDependsOn>
    <PackageDependsOn>Compile</PackageDependsOn>
    <TestDependsOn Condition=" '$(NoBuild)' != 'true' ">Package</TestDependsOn>
    <VerifyDependsOn Condition=" '$(SkipTests)' == 'true' ">Package</VerifyDependsOn>
    <VerifyDependsOn Condition=" '$(SkipTests)' != 'true' ">Test</VerifyDependsOn>
    <BuildDependsOn>Verify</BuildDependsOn>

    <CleanDependsOn></CleanDependsOn>
    <RebuildDependsOn></RebuildDependsOn>
  </PropertyGroup>

<!--
###################################################################
Default layout and configuration.
###################################################################
-->
  <PropertyGroup>
    <!--
      The environment variable 'CI' is set to 'true' by Travis and AppVeyor.
      https://docs.travis-ci.com/user/environment-variables/
      https://www.appveyor.com/docs/environment-variables/
    -->
    <Configuration Condition="'$(CI)' == 'true'">Release</Configuration>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <BuildProperties>$(BuildProperties);Configuration=$(Configuration)</BuildProperties>
    <RepositoryRoot Condition="'$(RepositoryRoot)' == ''">$(MSBuildStartupDirectory)</RepositoryRoot>
    <RepositoryRoot>$([MSBuild]::NormalizeDirectory('$(RepositoryRoot)'))</RepositoryRoot>
    <ArtifactsDir>$([MSBuild]::NormalizeDirectory('$(RepositoryRoot)'))artifacts\</ArtifactsDir>
    <BuildDir>$(ArtifactsDir)build\</BuildDir>
    <LogOutputDir>$(ArtifactsDir)logs\</LogOutputDir>
    <IntermediateDir>$([MSBuild]::NormalizeDirectory('$(RepositoryRoot)'))obj\</IntermediateDir>

    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(NUGET_PACKAGES)</NuGetPackageRoot>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' AND '$(USERPROFILE)' != '' ">$(USERPROFILE)\.nuget\packages\</NuGetPackageRoot>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' AND '$(HOME)' != '' ">$(HOME)\.nuget\packages\</NuGetPackageRoot>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(RepositoryRoot)\.nuget\packages\</NuGetPackageRoot>
    <NuGetPackageRoot>$([MSBuild]::NormalizeDirectory('$(NuGetPackageRoot)'))</NuGetPackageRoot>
  </PropertyGroup>

  <!-- Code signing certificate names -->
  <PropertyGroup Condition=" '$(DisableCodeSigning)' != 'true' ">
    <AssemblySigningCertName>Microsoft400</AssemblySigningCertName>
    <AssemblySigning3rdPartyCertName>3PartySHA2</AssemblySigning3rdPartyCertName>
    <PowerShellSigningCertName>Microsoft400</PowerShellSigningCertName>
    <PackageSigningCertName>NuGet</PackageSigningCertName>
    <VsixSigningCertName>VsixSHA2</VsixSigningCertName>
    <JarSigningCertName>MicrosoftJAR</JarSigningCertName>
  </PropertyGroup>

  <!-- Use build number from CI if available -->
  <PropertyGroup>
    <!--
      See https://confluence.jetbrains.com/display/TCD10/Predefined+Build+Parameters.
      This environment variable is automatically set by TeamCity.
    -->
    <BuildNumber Condition=" '$(BuildNumber)' == '' ">$(BUILD_NUMBER)</BuildNumber>
    <!--
      See https://docs.microsoft.com/en-us/vsts/pipelines/build/variables
      This environment variable is automatically set by VSTS.
    -->
    <BuildNumber Condition=" '$(BuildNumber)' == '' ">$(BUILD_BUILDNUMBER)</BuildNumber>
  </PropertyGroup>

  <!-- Create a temporary build number if not assigned by the CI server -->
  <PropertyGroup Condition=" '$(BuildNumber)' == '' AND '$(IncrementalVersion)' == 'true' ">
    <!--
      Create second-based build number for local builds.
      635556672000000000 is Jan 1, 2015.
    -->
    <_SecondBasedTimeStamp>$([System.DateTime]::UtcNow.Subtract($([System.DateTime]::FromBinary(635556672000000000))).TotalSeconds.ToString("F0"))</_SecondBasedTimeStamp>
    <_SecondBasedTimeStamp>t$([System.Int64]::Parse($(_SecondBasedTimeStamp)).ToString("x9"))</_SecondBasedTimeStamp>
    <BuildNumber>$(_SecondBasedTimeStamp)</BuildNumber>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(BuildNumber)' == '' ">
    <BuildNumber>t000</BuildNumber>
    <UsingLocalBuildNumber>true</UsingLocalBuildNumber>
  </PropertyGroup>

  <PropertyGroup>
    <BuildProperties Condition="'$(BuildNumber)' != ''">$(BuildProperties);BuildNumber=$(BuildNumber)</BuildProperties>
    <!-- Makes CSC error links clickable in the VS Code integrated terminal. -->
    <BuildProperties Condition=" '$(VSCODE_CWD)' != 'true' ">$(BuildProperties);GenerateFullPaths=true</BuildProperties>
  </PropertyGroup>

</Project>
