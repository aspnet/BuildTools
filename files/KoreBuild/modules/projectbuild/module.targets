<!--
FYI: targets, properties, and items that begin with an underscore are meant to be internal.
     They are subject to change. Overriding these may break these targets.
-->
<Project>

  <ItemDefinitionGroup>
    <ProjectToBuild>
      <RestoreInParallel>$(BuildInParallel)</RestoreInParallel>
    </ProjectToBuild>
  </ItemDefinitionGroup>

  <ItemGroup Condition="'$(DisableDefaultItems)' != 'true' AND '$(BuildSolutions)' == 'false' ">
    <ProjectToBuild Include="$(RepositoryRoot)**\*.csproj;$(RepositoryRoot)**\*.fsproj;$(RepositoryRoot)**\*.vbproj" Exclude="$(ProjectToExclude)" Condition=" '$(Projects)' == '' " />
    <ProjectToBuild Include="$(Projects)" Exclude="$(ProjectToExclude)" Condition=" '$(Projects)' != '' " />
  </ItemGroup>

  <PropertyGroup Condition="'$(DisableDefaultTargets)' != 'true' AND '$(BuildSolutions)' == 'false' ">
    <RestoreDependsOn>$(RestoreDependsOn);RestoreProjects</RestoreDependsOn>
    <CompileDependsOn>$(CompileDependsOn);BuildProjects</CompileDependsOn>
    <PackageDependsOn>$(PackageDependsOn);PackProjects</PackageDependsOn>
    <CleanDependsOn>$(CleanDependsOn);CleanProjects</CleanDependsOn>
    <RebuildDependsOn>$(RebuildDependsOn);RebuildProjects</RebuildDependsOn>
    <GetArtifactInfoDependsOn>$(GetArtifactInfoDependsOn);GetProjectArtifactInfo</GetArtifactInfoDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <NuGetRestoreTargets Condition="'$(NuGetRestoreTargets)'=='' and '$([MSBuild]::IsRunningFromVisualStudio())'=='true'">$(MSBuildToolsPath32)\..\..\..\Common7\IDE\CommonExtensions\Microsoft\NuGet\NuGet.targets</NuGetRestoreTargets>
    <NuGetRestoreTargets Condition="'$(NuGetRestoreTargets)'==''">$(MSBuildToolsPath)\NuGet.targets</NuGetRestoreTargets>
  </PropertyGroup>

<!--
###################################################################
Targets: {Target}Projects

Items: ProjectToBuild
Properties: ProjectToExclude

Executes /t:{Target} on all projects
###################################################################
-->
  <PropertyGroup Condition=" '$(BuildSolutions)' == 'false' ">
    <BuildInParallel>true</BuildInParallel>
  </PropertyGroup>

  <Target Name="ResolveProjects" Returns="@(ProjectToBuild)">
    <ItemGroup>
      <_Temp Remove="@(_Temp)" />
      <_Temp Include="@(ProjectToBuild)"/>
      <ProjectToBuild Remove="@(ProjectToBuild)" />
    </ItemGroup>

    <ConvertToAbsolutePath Paths="@(_Temp)">
      <Output TaskParameter="AbsolutePaths" ItemName="ProjectToBuild" />
    </ConvertToAbsolutePath>
  </Target>

  <Target Name="_EnsureProjects">
    <Error Text="No solutions found to build in '$(RepositoryRoot)'" Condition="@(ProjectToBuild->Count()) == 0" />
  </Target>

  <Target Name="RestoreProjects" DependsOnTargets="ResolveProjects;_EnsureProjects" Condition="'$(NoRestore)' != 'true'">
    <!-- This finds which projects support restore via NuGet.targets. -->

    <!-- Remove the Platform project property to avoid duplicate restores. NuGet restore does not support changing dependencies based on project platform. -->
    <MSBuild Targets="_IsProjectRestoreSupported"
             Projects="@(ProjectToBuild)"
             BuildInParallel="true"
             SkipNonexistentTargets="true"
             SkipNonexistentProjects="true"
             RemoveProperties="$(_BuildPropertiesToRemove);Platform"
             Properties="$(BuildProperties);__BuildTarget=_IsProjectRestoreSupported">
      <Output
          TaskParameter="TargetOutputs"
          ItemName="_ProjectToRestoreWithNuGet" />
    </MSBuild>

    <MSBuild Targets="_IsCustomRestoreTargetSupported"
             Projects="@(ProjectToBuild)"
             BuildInParallel="true"
             SkipNonexistentTargets="true"
             SkipNonexistentProjects="true"
             RemoveProperties="$(_BuildPropertiesToRemove);Platform"
             Properties="$(BuildProperties);__BuildTarget=_IsCustomRestoreTargetSupported">
      <Output
          TaskParameter="TargetOutputs"
          ItemName="_ProjectWithCustomRestore" />
    </MSBuild>

    <PropertyGroup>
      <!-- Normalize paths to avoid false warnings by NuGet about missing project references. -->
      <_ProjectToRestoreWithNuGetList>@(_ProjectToRestoreWithNuGet->'%(FullPath)')</_ProjectToRestoreWithNuGetList>
    </PropertyGroup>

    <!-- Invoke the 'Restore' target on projects which do not support NuGet. -->
    <ItemGroup>
      <_ProjectToRestoreDirectly Include="@(ProjectToBuild)"
                                 Exclude="@(_ProjectToRestoreWithNuGet)" />
    </ItemGroup>

    <!-- Remove the Platform project property to avoid duplicate restores. NuGet restore does not support changing dependencies based on project platform. -->
    <MSBuild Condition="@(_ProjectToRestoreDirectly->Count()) != 0"
             Projects="@(_ProjectToRestoreDirectly)"
             Targets="Restore"
             Properties="$(BuildProperties);__BuildTarget=Restore"
             RemoveProperties="$(_BuildPropertiesToRemove);Platform"
             BuildInParallel="%(_ProjectToRestoreDirectly.RestoreInParallel)" />

    <!-- Adds support for running a target CustomRestore on projects that require restoring artifacts from other package managers like npm -->
    <MSBuild Condition="@(_ProjectWithCustomRestore->Count()) != 0 and '%(Targets)' != '' "
             Projects="@(_ProjectWithCustomRestore)"
             Targets="%(Targets)"
             Properties="$(BuildProperties);__BuildTarget=CustomRestore"
             RemoveProperties="$(_BuildPropertiesToRemove);Platform"
             BuildInParallel="false" />

    <!--
      Invoke NuGet.targets directly. This avoids redundant calls the restore task.
    -->
    <MSBuild Condition=" '$(_ProjectToRestoreWithNuGetList)' != '' " Projects="$(NuGetRestoreTargets)"
             Targets="Restore"
             Properties="$(BuildProperties);RestoreGraphProjectInput=$(_ProjectToRestoreWithNuGetList);__BuildTarget=Restore"
             RemoveProperties="$(_BuildPropertiesToRemove)"
             BuildInParallel="$(BuildInParallel)" />
  </Target>

  <Target Name="CleanProjects" DependsOnTargets="ResolveProjects;_EnsureProjects">
    <!--
      Added __BuildTarget to invalidate subsequent MSBuild calls on the solution.
      MSBuild incorrectly caches the "Clean" target.
    -->
    <MSBuild Projects="@(ProjectToBuild)"
             Targets="Clean"
             Properties="$(BuildProperties);__BuildTarget=Clean"
             BuildInParallel="$(BuildInParallel)"
             RemoveProperties="$(_BuildPropertiesToRemove)" />
  </Target>

  <Target Name="BuildProjects" DependsOnTargets="ResolveProjects;_EnsureProjects">
    <MSBuild Projects="@(ProjectToBuild)"
             Properties="$(BuildProperties)"
             BuildInParallel="$(BuildInParallel)"
             RemoveProperties="$(_BuildPropertiesToRemove)" />

    <PropertyGroup>
      <_ProjectsWereBuilt>true</_ProjectsWereBuilt>
    </PropertyGroup>
  </Target>

  <Target Name="RebuildProjects" DependsOnTargets="ResolveProjects;_EnsureProjects">
    <MSBuild Projects="@(ProjectToBuild)"
             Targets="Rebuild"
             Properties="$(BuildProperties);__BuildTarget=Clean"
             BuildInParallel="$(BuildInParallel)"
             RemoveProperties="$(_BuildPropertiesToRemove)" />

    <PropertyGroup>
      <_ProjectsWereBuilt>true</_ProjectsWereBuilt>
    </PropertyGroup>
  </Target>

<!--
###################################################################
Target: PackProjects

Executes /t:Pack on all projects matching src/*/*.csproj.
###################################################################
-->
  <Target Name="PackProjects" DependsOnTargets="ResolveProjects">
    <PropertyGroup>
      <PackProperties Condition="'$(_ProjectsWereBuilt)' == 'true'">$(PackProperties);NoBuild=true;BuildProjectReferences=false</PackProperties>
    </PropertyGroup>

    <MSBuild Condition="@(ProjectToBuild->Count()) != 0"
             Projects="@(ProjectToBuild)"
             Targets="Pack"
             Properties="$(BuildProperties);$(PackProperties)"
             BuildInParallel="$(BuildInParallel)"
             RemoveProperties="$(_BuildPropertiesToRemove)" />
  </Target>

</Project>
