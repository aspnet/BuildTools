<!-- this is a dummy project designed to produce contentFiles packages -->
<Project InitialTargets="VerifyProperties">

  <PropertyGroup>
    <KoreBuildRestoreTargetsImported>true</KoreBuildRestoreTargetsImported>
    <BaseOutputPath>$(NuspecBasePath)bin\</BaseOutputPath>
    <BaseIntermediateOutputPath>$(NuspecBasePath)obj\</BaseIntermediateOutputPath>
    <DirBuildPropsInRepo>$([MSBuild]::GetDirectoryNameOfFileAbove($(NuspecBasePath), Directory.Build.props))\Directory.Build.props</DirBuildPropsInRepo>
    <DirBuildTargetsInRepo>$([MSBuild]::GetDirectoryNameOfFileAbove($(NuspecBasePath), Directory.Build.targets))\Directory.Build.targets</DirBuildTargetsInRepo>
  </PropertyGroup>

  <Import Project="$(DirBuildPropsInRepo)" Condition="Exists('$(DirBuildPropsInRepo)')" />
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <Target Name="VerifyProperties">
    <Error Text="Missing property: RepositoryRoot" Condition="'$(RepositoryRoot)'==''"/>
    <Error Text="Missing property: PackageId" Condition="'$(PackageId)'==''"/>
    <Error Text="Missing property: NuspecBasePath" Condition="'$(NuspecBasePath)'==''"/>
  </Target>

  <Import Project="$(RepositoryRoot)build\common.props" Condition="Exists('$(RepositoryRoot)build\common.props')" />
  <Import Project="$(NuspecBasePath)sharedsources.props" Condition="Exists('$(NuspecBasePath)sharedsources.props')" />

  <Target Name="WarnIfNoCommonProps" BeforeTargets="Pack">
    <Warning Text="Expected a props file in '$(RepositoryRoot)build\common.props' or '$(DirBuildPropsInRepo)')'. The package $(PackageId) may be missing the right version number when this is left out."
             Condition="!Exists('$(RepositoryRoot)build\common.props') And !Exists('$(DirBuildPropsInRepo)')"/>
  </Target>

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <NoBuild>true</NoBuild>
    <PackageOutputPath Condition="'$(PackageOutputPath)'==''">$(RepositoryRoot)artifacts\build</PackageOutputPath>
    <TargetFramework>netstandard1.0</TargetFramework>
    <EnableDefaultItems>false</EnableDefaultItems>
    <PackageId Condition=" '$(PackageId)' == '' ">$(ProjectDirName)</PackageId>
    <Description>$(PackageId)</Description>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <ContentTargetFolders>contentFiles</ContentTargetFolders>
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
    <DefaultExcludeItems>$(DefaultExcludeItems);$(BaseOutputPath);$(BaseIntermediateOutputPath);</DefaultExcludeItems>
    <!-- Suppress warnings about using semver 2.0 versions in packages -->
    <NoWarn>$(NoWarn);NU5105</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(DisableCodeSigning)' != 'true' ">
    <!-- Only specify the package signing cert. Do not specify AssemblySigningCertName because .Sources packages should not have binaries. -->
    <PackageSigningCertName>NuGet</PackageSigningCertName>
  </PropertyGroup>

  <ItemGroup Condition="'$(NuspecBasePath)'!=''">
    <Compile Include="$(NuspecBasePath)**\*.cs" Exclude="$(DefaultExcludeItems)">
      <Pack>true</Pack>
      <PackagePath>$(ContentTargetFolders)\cs\netstandard1.0\$(PackageId)\%(RecursiveDir)\</PackagePath>
    </Compile>
    <EmbeddedResource Include="$(NuspecBasePath)**\*.resx" Exclude="$(DefaultExcludeItems)">
      <Pack>true</Pack>
      <PackagePath>$(ContentTargetFolders)\any\any\$(PackageId)\%(RecursiveDir)\</PackagePath>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Remove="@(PackageReference)" />
  </ItemGroup>

  <Target Name="GetArtifactInfo" Returns="@(ArtifactInfo)">

    <PropertyGroup>
      <NormalizedPackageVersion>$(PackageVersion)</NormalizedPackageVersion>
      <!-- Strip version metadata -->
      <NormalizedPackageVersion Condition="$(NormalizedPackageVersion.Contains('+'))">$(PackageVersion.Substring(0, $(PackageVersion.IndexOf('+'))))</NormalizedPackageVersion>
    </PropertyGroup>

    <ItemGroup Condition=" '$(IsPackable)' == 'true' ">
      <ArtifactInfo Include="$(PackageOutputPath)$(PackageId).$(NormalizedPackageVersion).nupkg">
        <ArtifactType>NuGetPackage</ArtifactType>
        <PackageId>$(PackageId)</PackageId>
        <Version>$(NormalizedPackageVersion)</Version>
        <TargetFramework>$(TargetFramework)</TargetFramework>
        <RepositoryRoot>$(RepositoryRoot)</RepositoryRoot>
        <RepositoryUrl>$(RepositoryUrl)</RepositoryUrl>
        <Category>$(PackageArtifactCategory)</Category>
        <IsContainer>true</IsContainer>
        <Certificate>$(PackageSigningCertName)</Certificate>
        <ShouldBeSigned Condition=" '$(PackageSigningCertName)' != '' AND '$(DisableCodeSigning)' != 'true' ">true</ShouldBeSigned>
      </ArtifactInfo>
    </ItemGroup>
  </Target>

  <Import Project="$(DirBuildTargetsInRepo)" Condition="Exists('$(DirBuildTargetsInRepo)')" />
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
</Project>
