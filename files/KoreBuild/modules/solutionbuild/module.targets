<!--
FYI: targets, properties, and items that begin with an underscore are meant to be internal.
     They are subject to change. Overriding these may break these targets.
-->
<Project>

  <ItemGroup Condition="'$(DisableDefaultItems)' != 'true'">
    <Solutions Include="$(RepositoryRoot)*.sln" Exclude="@(ExcludeSolutions)" />
    <ProjectsToPack Include="$(RepositoryRoot)src\*\*.csproj" Exclude="@(ExcludeFromPack)" />
  </ItemGroup>

  <PropertyGroup Condition="'$(DisableDefaultTargets)' != 'true'">
    <PrepareDependsOn>$(PrepareDependsOn);_PrepareOutputPaths</PrepareDependsOn>
    <RestoreDependsOn>$(RestoreDependsOn);_BeforeRestore;RestoreSolutions</RestoreDependsOn>
    <CompileDependsOn>$(CompileDependsOn);BuildSolutions</CompileDependsOn>
    <PackageDependsOn>$(PackageDependsOn);PackageProjects;PackSharedSources</PackageDependsOn>
    <CleanDependsOn>$(CleanDependsOn);CleanArtifacts;CleanSolutions</CleanDependsOn>
    <RebuildDependsOn>$(RebuildDependsOn);RebuildSolutions</RebuildDependsOn>
    <GetArtifactInfoDependsOn>$(GetArtifactInfoDependsOn);GetProjectPackageInfo</GetArtifactInfoDependsOn>
  </PropertyGroup>

  <Target Name="CleanArtifacts">
    <RemoveDir Directories="$(BuildDir);$(IntermediateDir)" />
    <ItemGroup>
      <_FilesToDelete Include="$(ArtifactsDir)**\*" Exclude="$(LogOutputDir)**\*" />
    </ItemGroup>
    <Delete Files="@(_FilesToDelete)" />
  </Target>

  <Target Name="_PrepareOutputPaths">
    <MakeDir Directories="$(ArtifactsDir);$(BuildDir)" />
  </Target>

<!--
###################################################################
Targets: {Target}Solutions

Items: Solutions
Properties: ExcludeSolutions

Executes /t:{Target} on all solutions
###################################################################
-->
  <PropertyGroup>
    <_SolutionWasBuilt>false</_SolutionWasBuilt>
    <!-- ensure its value doesn't invalidate MSBuild build cache -->
    <_BuildPropertiesToRemove>$(_BuildPropertiesToRemove);_SolutionWasBuilt</_BuildPropertiesToRemove>

    <BuildInParallel>true</BuildInParallel>
  </PropertyGroup>

  <Target Name="ResolveSolutions" Returns="@(Solutions)">
    <ItemGroup>
      <_Temp Remove="@(_Temp)" />
      <_Temp Include="@(Solutions)"/>
      <Solutions Remove="@(Solutions)" />
    </ItemGroup>

    <RemoveDuplicates Inputs="@(_Temp)">
      <Output TaskParameter="Filtered" ItemName="Solutions" />
    </RemoveDuplicates>
  </Target>

  <Target Name="_EnsureSolutions">
    <Error Text="No solutions found to build in '$(RepositoryRoot)'" Condition="@(Solutions->Count()) == 0" />
  </Target>

  <Target Name="_BeforeRestore">
    <Warning Text="Restore is skipped because 'NoRestore' == 'true'" Condition="'$(NoRestore)' == 'true'" />
  </Target>

  <Target Name="RestoreSolutions" DependsOnTargets="ResolveSolutions;_EnsureSolutions" Condition="'$(NoRestore)' != 'true'">
    <!--
      Added _SolutionTarget to invalidate subsequent MSBuild calls on the solution.
      MSBuild incorrectly caches some solution target.
    -->
    <MSBuild Targets="Restore"
      Projects="@(Solutions)"
      Properties="$(SolutionProperties);_SolutionTarget=Restore"
      RemoveProperties="$(_BuildPropertiesToRemove)"
      BuildInParallel="$(BuildInParallel)" />
  </Target>

  <Target Name="CleanSolutions" DependsOnTargets="ResolveSolutions;_EnsureSolutions">
    <!--
      Added _SolutionTarget to invalidate subsequent MSBuild calls on the solution.
      MSBuild incorrectly caches the "Clean" target.
    -->
    <MSBuild Targets="Clean"
      Projects="@(Solutions)"
      Properties="$(SolutionProperties);_SolutionTarget=Clean"
      BuildInParallel="$(BuildInParallel)"
      RemoveProperties="$(_BuildPropertiesToRemove)" />
  </Target>

  <Target Name="BuildSolutions" DependsOnTargets="ResolveSolutions;_EnsureSolutions">
    <MSBuild Targets="Build"
      Projects="@(Solutions)"
      Properties="$(SolutionProperties)"
      BuildInParallel="$(BuildInParallel)"
      RemoveProperties="$(_BuildPropertiesToRemove)" />

    <PropertyGroup>
      <_SolutionWasBuilt>true</_SolutionWasBuilt>
    </PropertyGroup>
  </Target>

  <Target Name="RebuildSolutions" DependsOnTargets="ResolveSolutions;_EnsureSolutions">
    <MSBuild Targets="Rebuild"
      Projects="@(Solutions)"
      RemoveProperties="$(_BuildPropertiesToRemove)"
      BuildInParallel="$(BuildInParallel)" />

    <PropertyGroup>
      <_SolutionWasBuilt>true</_SolutionWasBuilt>
    </PropertyGroup>
  </Target>

<!--
###################################################################
Target: PackageProjects

Executes /t:Pack on all projects matching src/*/*.csproj.
###################################################################
-->
  <Target Name="PackageProjects" DependsOnTargets="ResolveSolutions">
    <PropertyGroup>
      <PackageNoBuild Condition="'$(PackageNoBuild)' == ''">$(_SolutionWasBuilt)</PackageNoBuild>
    </PropertyGroup>

    <MSBuild Targets="Pack"
      Projects="@(ProjectsToPack)"
      Condition="@(ProjectsToPack->Count()) != 0"
      Properties="$(SolutionProperties);PackageOutputPath=$(BuildDir);NoBuild=$(PackageNoBuild)"
      BuildInParallel="$(BuildInParallel)"
      RemoveProperties="$(_BuildPropertiesToRemove);PackageNoBuild" />
  </Target>

  <Target Name="GetProjectPackageInfo" Returns="@(ArtifactInfo)">
    <PropertyGroup>
      <_InspectionTargetsFile>$(MSBuildThisFileDirectory)Project.Inspection.targets</_InspectionTargetsFile>
    </PropertyGroup>

    <ItemGroup>
      <_Temp Remove="@(_Temp)" />
    </ItemGroup>

    <MSBuild Targets="GetArtifactInfo"
      Projects="@(ProjectsToPack)"
      Condition="@(ProjectsToPack->Count()) != 0"
      Properties="$(SolutionProperties);EnableApiCheck=false;NoBuild=true;RepositoryRoot=$(RepositoryRoot);PackageOutputPath=$(BuildDir);CustomAfterMicrosoftCommonTargets=$(_InspectionTargetsFile);CustomAfterMicrosoftCommonCrossTargetingTargets=$(_InspectionTargetsFile)"
      BuildInParallel="$(BuildInParallel)"
      RemoveProperties="$(_BuildPropertiesToRemove);PackageNoBuild">
      <Output TaskParameter="TargetOutputs" ItemName="_Temp" />
    </MSBuild>

    <ItemGroup>
      <!-- Output from this target may include items representing assemblies inside the nupkg. -->
      <ArtifactInfo Include="@(_Temp)" Condition="'%(_Temp.Container)' == ''" />

      <!-- Nupkgs or assemblies in the nupkg that should be signed -->
      <FilesToSign Include="@(_Temp)" Condition=" '%(_Temp.ShouldBeSigned)' == 'true' " />

      <!-- Assemblies inside a nupkg that should not be signed -->
      <FilesToExcludeFromSigning Include="@(_Temp)" Condition=" '%(_Temp.ShouldBeSigned)' == 'false' AND '%(_Temp.Container)' != ''" />
    </ItemGroup>
  </Target>

</Project>
