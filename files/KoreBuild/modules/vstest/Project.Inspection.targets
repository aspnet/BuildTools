<Project>

  <PropertyGroup>
    <GetTestAssemblyDependsOn Condition="'$(TargetFramework)' != ''">GetTargetPath</GetTestAssemblyDependsOn>
    <!-- TestGroupNamePrefix can be set externally when building multiple repos together -->
    <TestGroupName Condition="'$(TestGroupName)' == '' and '$(RunTestAssembliesInParallel)' == 'false'">$(TestGroupNamePrefix)$(MSBuildProjectName)</TestGroupName>
    <TestGroupName Condition="'$(TestGroupName)' == ''">$(TestGroupNamePrefix)UnitTests</TestGroupName>

    <VsTestSupported Condition="'$(VsTestSupported)' == '' AND ( '$(MSBuildProjectExtension)' == '.csproj' OR '$(MSBuildProjectExtension)' == '.vbproj' OR '$(MSBuildProjectExtension)' == '.fsproj' )">true</VsTestSupported>
  </PropertyGroup>

  <Target Name="_IsVsTestSupported" Returns="@(_IsVsTestSupported)">
    <ItemGroup Condition="'$(VsTestSupported)' == 'true' ">
      <_IsVsTestSupported Include="$(MSBuildProjectFullPath)" />
    </ItemGroup>
  </Target>

  <Target Name="GetTestAssembly" DependsOnTargets="$(GetTestAssemblyDependsOn)" Returns="@(TestAssembly)">
    <ItemGroup Condition=" '$(SkipTests)' != 'true' AND ( '$(IsTestProject)' == 'true' OR ('$(IsTestProject)' == '' AND @(PackageReference->WithMetadataValue('Identity', 'Microsoft.NET.Test.Sdk')->Count()) != 0) )">
      <TestAssembly Include="@(TargetPathWithTargetPlatformMoniker)">
        <TargetFramework>$(TargetFramework)</TargetFramework>
        <TestGroupName>$(TestGroupName)</TestGroupName>
      </TestAssembly>
    </ItemGroup>

    <ItemGroup>
      <_TargetFramework Include="$(TargetFrameworks)" />
    </ItemGroup>

    <MSBuild Targets="GetTestAssembly"
             Projects="$(MSBuildProjectFullPath)"
             Properties="TargetFramework=%(_TargetFramework.Identity)"
             Condition=" '$(TargetFrameworks)' != '' AND '$(TargetFramework)' == '' ">
      <Output TaskParameter="TargetOutputs" ItemName="TestAssembly" />
    </MSBuild>
  </Target>

</Project>
