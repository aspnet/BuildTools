
var VERSION='0.1'
var FULL_VERSION='0.1'
var AUTHORS='Microsoft Open Technologies, Inc.'

default BASE_DIR='${Directory.GetCurrentDirectory()}'
default TARGET_DIR='${Path.Combine(BASE_DIR, "artifacts")}'

use-standard-lifecycle
k-standard-goals

#xml-docs-test .clean .build-compile description='Check generated XML documentation files for errors' target='test'
  k-xml-docs-test

#nuget-pack target='package'
  @{
    var configuration = E("Configuration");
    var projects = new Dictionary<string, string[]>
    {
      { "Microsoft.AspNetCore.BuildTools.ApiCheck", new [] { "net451", "netcoreapp1.0" } },
      { "PackageCacheUploader", new [] { "netcoreapp1.0" } },
      { "DependenciesPackager", new [] { "netcoreapp1.0" } },
      { "NuGetPackageVerifier", new [] { "netcoreapp1.0" } },
      { "SplitPackages", new [] { "net451" } },
    };

    var outputDir = Path.Combine(TARGET_DIR, "build");
    var nugetPath = E("KOREBUILD_NUGET_EXE") ?? ".build/NuGet.exe";
    var publishDir = Path.Combine(TARGET_DIR, "publish");

    foreach (var item in projects)
    {
        var projectName = item.Key;
        var basePath = Path.Combine(publishDir, projectName);
        foreach (var tfm in item.Value)
        {
            Exec("dotnet", "publish src/" + projectName + "/" + projectName + ".csproj"
                + " --framework " + tfm
                + " --configuration " + configuration
                + " --output \"" + Path.Combine(basePath, tfm) + "\"");
        }

        var nuspecPath = Path.Combine("src", projectName, projectName + ".nuspec");
        var existingNupkg = Directory.EnumerateFiles(outputDir)
            .Select(p => Path.GetFileName(p))
            .First(fn => fn.StartsWith(projectName) && fn.EndsWith(".nupkg"));
        var version = Path.GetFileNameWithoutExtension(existingNupkg).Substring(projectName.Length + 1);

        NugetPack(nugetPath,
          nuspecPath,
          outputDir,
          version,
          "-Verbosity Detailed -NoPack -BasePath \"" + basePath + "\""
          + " -Properties configuration=" + configuration);
      }
  }

macro name='NugetPack' nugetPath='string' nuspecFile='string' outputDir='string' packageVersion='string' extra='string'
    nuget-pack
