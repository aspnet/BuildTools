<Project>

  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)NuGetPackageVerifier.Task.dll"
              TaskName="NuGetPackagerVerifier.VerifyPackages" />

  <PropertyGroup>
    <VerifyDependsOn>$(VerifyDependsOn);VerifyPackages</VerifyDependsOn>
  </PropertyGroup>

<!--
###################################################################
Target: VerifyPackages

Runs the NuGet Package Verifier on all nupkgs in build output.
Only runs if a file named NuGetPackageVerifier.json is in the
repository root.
###################################################################
-->
  <PropertyGroup>
    <NuGetVerifierRuleFile Condition=" '$(NuGetVerifierRuleFile)' == '' ">$(RepoRoot)NuGetPackageVerifier.json</NuGetVerifierRuleFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageVerifierDirectory Include="$(BuildDir)" Condition=" '$(OverridePackageOutputPath)' != 'false' " />
  </ItemGroup>

  <Target Name="VerifyPackages" Condition="Exists('$(NuGetVerifierRuleFile)') AND @(PackageVerifierDirectory->Count()) != 0">

    <ItemGroup>
      <_ExistentPackageVerifierDirectory Include="@(PackageVerifierDirectory)"  Condition=" Exists('%(Identity)') " />
    </ItemGroup>

    <Warning Text="Skipping nuget package verification because no package output directories were found: @(PackageVerifierDirectory, ', ')." Condition="@(_ExistentPackageVerifierDirectory->Count()) == 0" />

    <VerifyPackages ArtifactDirectory="@(_ExistentPackageVerifierDirectory)"
      RuleFile="$(NuGetVerifierRuleFile)"
      Condition="@(_ExistentPackageVerifierDirectory->Count()) != 0" />
  </Target>

</Project>
