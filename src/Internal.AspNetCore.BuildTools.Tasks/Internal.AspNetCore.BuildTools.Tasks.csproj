<Project Sdk="Microsoft.NET.Sdk">
  <!-- Most modifications to this file need to also be made to Internal.AspNetCore.Sdk.Tasks.csproj. -->
  <Import Project="..\..\build\common.props" />

  <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <DefineConstants>$(DefineConstants);BuildTools</DefineConstants>
    <Description>MSBuild tasks. This package is intended for Microsoft use only</Description>

    <!--
      The netstandard1.0 TFM doesn't actually compile tasks.
      It's just there so Internal.AspNetCore.Sdk gets a dependency to this project.
    -->
    <TargetFrameworks>netstandard1.6;net46;netstandard1.0</TargetFrameworks>
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
    <RootNamespace>Microsoft.AspNetCore.BuildTools</RootNamespace>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <BuildOutputTargetFolder>tools</BuildOutputTargetFolder>

    <!-- don't try to compile the *.cs files on netstandard1.0 -->
    <EnableDefaultItems Condition="'$(TargetFramework)' != 'netstandard1.6' AND '$(TargetFramework)' != 'net46'">false</EnableDefaultItems>

    <!--
      Enable binding redirects to ensure correct versions of System.Reflection.Metadata and
      System.Collections.Immutable are picked up even when running under full framework and one is in the GAC.
    -->
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
  </PropertyGroup>

  <ItemGroup>
    <None Include="build\*" Pack="true" PackagePath="build\" />
    <None Include="buildMultiTargeting\*.props" Pack="true" PackagePath="buildMultiTargeting\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="NETStandard.Library" Version="1.6.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != 'netstandard1.0'">
    <PackageReference Include="Microsoft.Build.Framework" Version="$(MsBuildPackageVersions)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="$(MsBuildPackageVersions)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="$(MsBuildPackageVersions)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Extensions.CommandLineUtils.Sources" Version="$(CommandLineUtilsVersion)" PrivateAssets="All" />
    <PackageReference Include="System.Reflection.Metadata" Version="1.4.2" PrivateAssets="All" />
    <PackageReference Include="System.Collections.Immutable" Version="1.3.1" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.6' ">
    <PackageReference Include="System.Xml.XmlDocument" Version="4.0.1" PrivateAssets="All" />
    <PackageReference Include="System.Xml.XPath.XmlDocument" Version="4.0.1" PrivateAssets="All" />
  </ItemGroup>

  <Target Name="PackTaskDependencies" BeforeTargets="GenerateNuspec">
    <!--
    The include needs to happen after output has been copied to build output folder
    but before NuGet generates a nuspec. See https://github.com/NuGet/Home/issues/4704.
    -->
    <ItemGroup>
      <_PackageFiles Include="bin\$(Configuration)\*\*.config;bin\$(Configuration)\*\System.Reflection.Metadata.dll;bin\$(Configuration)\*\System.Collections.Immutable.dll">
        <PackagePath>tools\%(RecursiveDir)</PackagePath>
        <Visible>false</Visible>
        <BuildAction>Content</BuildAction>
      </_PackageFiles>
    </ItemGroup>
  </Target>
</Project>
