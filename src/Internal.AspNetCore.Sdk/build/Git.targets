<Project>

  <PropertyGroup>
    <GenerateCommitHashAttribute Condition="'$(GenerateCommitHashAttribute)'==''">true</GenerateCommitHashAttribute>
    <GeneratedCommitHashAttributeFile Condition="'$(GeneratedCommitHashAttributeFile)'==''">$(IntermediateOutputPath)$(AssemblyName).CommitHash$(DefaultLanguageSourceExtension)</GeneratedCommitHashAttributeFile>
    <SourceLinkDestination Condition="'$(SourceLinkDestination)' == ''">$(IntermediateOutputPath)sourcelink.json</SourceLinkDestination>
    <SourceDirectory>$([System.IO.Path]::Combine($(RepositoryRoot.Trim('/')), 'src'))</SourceDirectory>
    <GenerateSourceLinkFile Condition="'$(GenerateSourceLinkFile)' == '' AND '$(IsPackable)' != 'false'">true</GenerateSourceLinkFile>
  </PropertyGroup>

  <Target Name="ResolveCommitHash" Condition="'$(CommitHash)'==''">

    <PropertyGroup>
      <CommitHash Condition="'$(APPVEYOR_REPO_COMMIT)' != ''">$(APPVEYOR_REPO_COMMIT)</CommitHash>
      <CommitHash Condition="'$(TRAVIS_COMMIT)' != ''">$(TRAVIS_COMMIT)</CommitHash>
    </PropertyGroup>

    <Sdk_GetGitCommitInfo WorkingDirectory="$(MSBuildProjectDirectory)"
                      Condition="'$(CommitHash)' == ''"
                      ContinueOnError="WarnAndContinue">
      <Output TaskParameter="CommitHash" PropertyName="CommitHash" />
    </Sdk_GetGitCommitInfo>
  </Target>

  <Target Name="CreateSourceLink"
          Condition="'$(SourceLink)'=='' AND '$(GenerateSourceLinkFile)' != 'false' "
          Inputs="$(IntermediateCommitHash);$(MSBuildAllProjects)"
          Outputs="$(SourceLinkDestination)" >

    <Warning Text="RepositoryUrl should be set on all repositories which use SourceLink."
             Condition="'$(RepositoryUrl)' == ''" />

    <Sdk_CreateSourceLink
          RootDirectory="$(RepositoryRoot)"
          OriginUrl="$(RepositoryUrl)"
          Commit="$(CommitHash)"
          DestinationFile="$(SourceLinkDestination)"
          ContinueOnError="WarnAndContinue"
          Condition="'$(CommitHash)' != '' AND '$(RepositoryUrl)' != ''">
      <Output TaskParameter="SourceLinkFile" PropertyName="SourceLink" />
    </Sdk_CreateSourceLink>

    <Warning Text="SourceLink not enabled because this is not a git repo."
             Condition="'$(CommitHash)' == ''" />
  </Target>

<!--
********************************************************************************************
Target: GenerateCommitHashAttribute
Generates an assembly attribute with commit hash
********************************************************************************************
-->
  <Target Name="GenerateCommitHashAttribute"
          BeforeTargets="CoreCompile"
          DependsOnTargets="ResolveCommitHash;PrepareForBuild;GenerateIntermediateCommitHash;CoreGenerateCommitHashAttribute;CreateSourceLink"
          Condition="'$(GenerateCommitHashAttribute)'=='true' and '$(DesignTimeBuild)'!='true'" >
    <Warning Text="Property 'CommitHash' was not set"
             Condition="'$(CommitHash)'==''" />
  </Target>

  <Target Name="GenerateIntermediateCommitHash" Condition="'$(CommitHash)' != ''">
    <PropertyGroup>
      <!-- shorten to help avoid max path length issues -->
      <IntermediateCommitHash>$(IntermediateOutputPath)$(CommitHash.Substring(0, 10)).commit</IntermediateCommitHash>
    </PropertyGroup>

    <ItemGroup>
      <_OldCommitFiles Include="$(IntermediateOutputPath)*.commit" Exclude="$(IntermediateCommitHash)" />
    </ItemGroup>

    <Delete Files="@(_OldCommitFiles)" />
    <Touch Files="$(IntermediateCommitHash)" AlwaysCreate="true" Condition="!Exists('$(IntermediateCommitHash)')" />
  </Target>

  <Target Name="CoreGenerateCommitHashAttribute"
          Condition="'$(CommitHash)'!='' and '$(GenerateCommitHashAttribute)'=='true'"
          Inputs="$(IntermediateCommitHash)"
          Outputs="$(GeneratedCommitHashAttributeFile)">

    <ItemGroup>
      <_CustomAttributes Remove="@(_CustomAttributes)" />
      <_CustomAttributes Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitHash</_Parameter1>
        <_Parameter2>$(CommitHash)</_Parameter2>
      </_CustomAttributes>
    </ItemGroup>

    <WriteCodeFragment AssemblyAttributes="@(_CustomAttributes)" Language="$(Language)" OutputFile="$(GeneratedCommitHashAttributeFile)">
      <Output TaskParameter="OutputFile" ItemName="Compile" />
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>

    <Message Importance="normal" Text="Generated commit hash attribute file $(GeneratedCommitHashAttributeFile)" />
  </Target>

</Project>
